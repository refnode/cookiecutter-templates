realpath() {
  [[ $1 = /* ]] && echo "$1" || echo "$PWD/${1#./}"
}

layout_python-venv() {
  local python=${1:-python3}
  [[ $# -gt 0 ]] && shift
  unset PYTHONHOME
  if [[ -n $VIRTUAL_ENV ]]
  then
    VIRTUAL_ENV=$(realpath "${VIRTUAL_ENV}")
  else
    local python_version
    python_version=$("$python" -c "import platform; print(platform.python_version())")
    if [[ -z $python_version ]]
    then
      log_error "Could not detect Python version"
      return 1
    fi
    VIRTUAL_ENV=$PWD/.direnv/python-venv-$python_version
  fi
  export VIRTUAL_ENV
  if [[ ! -d $VIRTUAL_ENV ]]
  then
    log_status "no venv found; creating $VIRTUAL_ENV"
    "$python" -m venv "$VIRTUAL_ENV"
  fi
  PATH_add "$VIRTUAL_ENV/bin"
}

# use a certain pyenv version
use_python() {
  if [ -n "$(which pyenv)" ]
  then
    local pyversion=$1
    pyenv local ${pyversion}
  fi
}

layout_virtualenv() {
  local pyversion=$1
  local pvenv=$2
  if [ -n "$(which pyenv virtualenv)" ]
  then
    pyenv virtualenv --force --quiet ${pyversion} ${pvenv}-${pyversion}
  fi
  pyenv local --unset
}

layout_activate() {
  if [ -n "$(which pyenv)" ]
  then
    source $(pyenv root)/versions/$1/bin/activate
  fi
}
